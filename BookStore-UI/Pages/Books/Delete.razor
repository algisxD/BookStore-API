@page "/books/delete/{Id}"

@inject IBookRepository _repo
@inject IFileUpload _fileUpload
@inject NavigationManager _navManagaer;

<h3>Are you sure you want to delete this record?</h3>
<hr />
<br />

@if(!isSuccess)
{
    <ErrorMessage Message="Cound not delete the book" />
}


@if(int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid selection. Please try again" />
}
@if(Model == null)
{
    <LoadingMessage Message="Loading book details.." />
}
else
{
<div class="row">
    <div class="col-6">
        <table class="table table-responsive">
            <tr>
                <td>
                    <strong>Title</strong>
                </td>
                <td>@Model.Title</td>
            </tr>
            <tr>
                <td>
                    <strong>Author</strong>
                </td>
                <td>
                    @if (Model.Author == null)
                    {
                        <span class="text-muted">No Author Recorded</span>
                    }
                    else
                    {
                        <a href="/authors/view/@Model.AuthorId">@Model.Author.FirstName @Model.Author.LastName</a>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <strong>Summary</strong>
                </td>
                <td>@Model.Summary</td>
            </tr>
            <tr>
                <td>
                    <strong>Published Year</strong>
                </td>
                <td>@Model.Year</td>
            </tr>
            <tr>
                <td>
                    <strong>ISBN</strong>
                </td>
                <td>@Model.Isbn</td>
            </tr>

        </table>
    </div>
    <div class="col-4">
        <img src="uploads/@Model.Image" style="height:300px; width:300px" />
        <h3 class="text-center text-info">@string.Format("{0:C}", Model.Price)</h3>
    </div>
</div>
}

<button @onclick="DeleteBook" class="btn btn-danger">
    <span class="oi oi-delete"></span>
    Delete book record
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back to list
</button>

@code {
    [Parameter]
    public string Id { get; set; }
    private bool isSuccess = true;
    private bool isFailed = false;

    private Book Model = new Book();


    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _repo.Get(Endpoints.BooksEndPoint, id);
    }

    private async void DeleteBook()
    {
        _fileUpload.RemoveFile(Model.Image);
        isSuccess = await _repo.Delete(Endpoints.BooksEndPoint, Model.Id);
        if (isSuccess)
        {
            BackToList();
        }
    }

    private void BackToList()
    {
        _navManagaer.NavigateTo("/books/");
    }
}
